#!/bin/bash
# Hosts are retrieved from the "hosts" file. The first host listed is the master.

MASTER=$(head -n 1 ./cassandra/hosts)
NODE_NAME="cassandra-node"
VOLUME_PATH="/home/student/cassandra-data"
#HEALTH_CMD="cqlsh -e \"DESCRIBE KEYSPACES;\""
CASSANDRA_PORT=9042
CASSANDRA_NET=cassandra-net


# create network if it doesn't already exist
NETWORK_EXISTS=$(docker network ls | grep mynet | awk '{print $1}')
if [ -z "$NETWORK_EXISTS" ]; then
    ./cassandra/setup.sh
fi


# initialize Cassandra nodes
for host in $(cat ./cassandra/hosts); do
    if [ "$host" = "$MASTER" ]; 
    then
        #COMMAND="docker run --name $NODE_NAME -d -e CASSANDRA_BROADCAST_ADDRESS=$host -p 7000:7000 -p $CASSANDRA_PORT:9042 --network=$CASSANDRA_NET -v $VOLUME_PATH:/var/lib/cassandra --health-cmd=$HEALTH_CMD --health-interval=30s --health-timeout=30s --health-retries=3 cassandra"
        COMMAND="docker run --name $NODE_NAME -d -e CASSANDRA_BROADCAST_ADDRESS=$host -p 7000:7000 -p $CASSANDRA_PORT:9042 --network=$CASSANDRA_NET -v $VOLUME_PATH:/var/lib/cassandra cassandra"
    else
        #COMMAND="docker run --name $NODE_NAME -d -e CASSANDRA_BROADCAST_ADDRESS=$host -p 7000:7000 -p $CASSANDRA_PORT:9042 --network=$CASSANDRA_NET -e CASSANDRA_SEEDS=$MASTER -v $VOLUME_PATH:/var/lib/cassandra --health-cmd=$HEALTH_CMD --health-interval=30s --health-timeout=30s --health-retries=3 cassandra"
        COMMAND="docker run --name $NODE_NAME -d -e CASSANDRA_BROADCAST_ADDRESS=$host -p 7000:7000 -p $CASSANDRA_PORT:9042 --network=$CASSANDRA_NET -e CASSANDRA_SEEDS=$MASTER -v $VOLUME_PATH:/var/lib/cassandra cassandra"
    fi
    ssh student@$host "docker container stop $NODE_NAME; docker container rm $NODE_NAME; if [ ! -d $VOLUME_PATH ]; then mkdir -p $VOLUME_PATH; fi; $COMMAND;"
    
    # while true;
    # do
    #     sleep 5
	# 	STATUS=$(docker exec -it $NODE_NAME nodetool status | grep -e $1)
    #     STATUSUN=$(echo $STATUS | grep -e "UN")
    #     echo $STATUS
    #     [[ ! -z "$STATUSUN" ]] && break;
    # done;
    shift
done


# create keyspace if it doesn't already exist
KEYSPACE_NAME=url_shortener
KEYSPACE_EXISTS=$(ssh student@$MASTER "docker exec $NODE_NAME cqlsh -e \"DESCRIBE KEYSPACES;\"" | grep -e "$KEYSPACE_NAME")
if [ -z "$KEYSPACE_EXISTS" ]; then
    ssh student@$MASTER "docker exec $NODE_NAME cqlsh -e \"CREATE KEYSPACE $KEYSPACE_NAME WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 2} ; USE $KEYSPACE_NAME; CREATE TABLE IF NOT EXISTS urls (short_code text PRIMARY KEY, url_original text);\""
# ssh student@10.128.1.28 "docker exec cassandra-node cqlsh -e \"CREATE KEYSPACE url_shortener WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 2} ; USE url_shortener; CREATE TABLE IF NOT EXISTS urls (short_code text PRIMARY KEY, url_original text);\""
fi

# docker exec -it cassandra-node bash -c "nodetool status"

# docker exec cassandra-node cqlsh -e "DESCRIBE KEYSPACES;"
# docker exec -it cassandra-node cqlsh

# Example commands

# USE url_shortener;
# INSERT INTO urls (short_code, url_original) VALUES ('abc', 'https://www.google.com');
# SELECT * FROM urls WHERE short_code = 'abc' ALLOW FILTERING;
# SELECT * FROM urls WHERE short_code = 'abc';
# SELECT * FROM url_shortener.urls;
